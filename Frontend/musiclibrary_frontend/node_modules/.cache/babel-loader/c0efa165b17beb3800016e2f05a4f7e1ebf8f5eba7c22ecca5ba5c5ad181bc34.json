{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\musiclibrary\\\\src\\\\components\\\\EditTrackModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport \"../components/Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTrackModal = _ref => {\n  _s();\n  let {\n    isOpen,\n    trackData,\n    onClose,\n    onUpdate\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [bpm, setBPM] = useState(trackData.bpm);\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(trackData.id);\n    const updatedTrack = {\n      id: trackData.id,\n      title: title,\n      artist: artist,\n      genre: genre,\n      bpm: bpm\n    };\n    onUpdate(trackData.id, updatedTrack);\n    onClose();\n  }\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-title\",\n          children: \"Update Track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: () => handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              placeholder: trackData.title,\n              value: title,\n              onChange: event => setTitle(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Artist:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              placeholder: trackData.artist,\n              value: artist,\n              onChange: event => setArtist(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Genre:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              placeholder: trackData.genre,\n              value: genre,\n              onChange: event => setGenre(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"BPM:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"number\",\n              placeholder: trackData.bpm.toString(),\n              value: bpm,\n              onChange: event => setBPM(parseInt(event.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              type: \"button\",\n              onClick: onClose,\n              children: \"Cancle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTrackModal, \"IzjaFXc0/XCNAc7KtvMExqdNU3I=\");\n_c = EditTrackModal;\nexport default EditTrackModal;\nvar _c;\n$RefreshReg$(_c, \"EditTrackModal\");","map":{"version":3,"names":["React","useState","ReactModal","jsxDEV","_jsxDEV","EditTrackModal","_ref","_s","isOpen","trackData","onClose","onUpdate","title","setTitle","artist","setArtist","genre","setGenre","bpm","setBPM","handleSubmit","event","preventDefault","console","log","id","updatedTrack","onRequestClose","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","toString","parseInt","onClick","_c","$RefreshReg$"],"sources":["E:/Projects/musiclibrary/src/components/EditTrackModal.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TrackType } from \"../types/Types\";\r\nimport ReactModal from \"react-modal\";\r\nimport \"../components/Modal.css\";\r\n\r\ntype EditTrackModalProps = {\r\n  isOpen: boolean;\r\n  trackData: TrackType;\r\n  onClose: () => void;\r\n  onUpdate: (id: number, track: TrackType) => void;\r\n};\r\n\r\nconst EditTrackModal: React.FC<EditTrackModalProps> = ({\r\n  isOpen,\r\n  trackData,\r\n  onClose,\r\n  onUpdate,\r\n}) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [artist, setArtist] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [bpm, setBPM] = useState(trackData.bpm);\r\n\r\n  function handleSubmit(event: React.FormEvent) {\r\n    event.preventDefault();\r\n    console.log(trackData.id);\r\n    const updatedTrack = {\r\n      id: trackData.id,\r\n      title: title,\r\n      artist: artist,\r\n      genre: genre,\r\n      bpm: bpm,\r\n    };\r\n    onUpdate(trackData.id, updatedTrack);\r\n    onClose();\r\n  }\r\n  return (\r\n    <ReactModal isOpen={isOpen} onRequestClose={onClose}>\r\n      <div>\r\n        <div>\r\n          <h2 className=\"modal-title\">Update Track</h2>\r\n          <form onSubmit={() => handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Title:</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder={trackData.title}\r\n                value={title}\r\n                onChange={(event) => setTitle(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Artist:</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder={trackData.artist}\r\n                value={artist}\r\n                onChange={(event) => setArtist(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Genre:</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder={trackData.genre}\r\n                value={genre}\r\n                onChange={(event) => setGenre(event.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>BPM:</label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                placeholder={trackData.bpm.toString()}\r\n                value={bpm}\r\n                onChange={(event) => setBPM(parseInt(event.target.value))}\r\n              />\r\n            </div>\r\n            <div className=\"modal-buttons\">\r\n              <button className=\"button\" type=\"submit\">\r\n                Update\r\n              </button>\r\n              <button className=\"button\" type=\"button\" onClick={onClose}>\r\n                Cancle\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nexport default EditTrackModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}