{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\musiclibrary\\\\src\\\\components\\\\Track.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport \"../components/TrackList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst updatedTrack = {\n  id: 8,\n  title: \"Update\",\n  artist: \"Update\",\n  genre: \"Update\",\n  bpm: 50\n};\nconst Track = _ref => {\n  _s();\n  let {\n    data,\n    onUpdate,\n    onDelete\n  } = _ref;\n  const [showEditTrackModal, setEditTrackModal] = useState(false);\n  function CloseEditTrackModal() {\n    setEditTrackModal(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.genre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: data.bpm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => setEditTrackModal(true),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: () => onDelete(data.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, data.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Track, \"jaK/WFatOjHHKxET9kgauoLNPnE=\");\n_c = Track;\nexport default Track;\nvar _c;\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","updatedTrack","id","title","artist","genre","bpm","Track","_ref","_s","data","onUpdate","onDelete","showEditTrackModal","setEditTrackModal","CloseEditTrackModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["E:/Projects/musiclibrary/src/components/Track.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { TrackType } from \"../types/Types\";\r\nimport { useState } from \"react\";\r\nimport \"../components/TrackList.css\";\r\nimport EditTrackModal from \"./EditTrackModal\";\r\n\r\ninterface Props {\r\n  data: TrackType;\r\n  onUpdate: (id: number, track: TrackType) => void;\r\n  onDelete: (id: number) => void;\r\n}\r\n\r\nconst updatedTrack = {\r\n    id: 8,\r\n    title: \"Update\",\r\n    artist: \"Update\",\r\n    genre: \"Update\",\r\n    bpm: 50,\r\n}\r\n\r\nconst Track: React.FC<Props> = ({ data, onUpdate, onDelete }) => {\r\n\r\n  const [showEditTrackModal, setEditTrackModal] = useState(false);\r\n\r\n  function CloseEditTrackModal() {\r\n    setEditTrackModal(false);\r\n  }\r\n\r\n  return (\r\n    <tr key={data.id}>\r\n      <td>{data.title}</td>\r\n      <td>{data.artist}</td>\r\n      <td>{data.genre}</td>\r\n      <td>{data.bpm}</td>\r\n      <td>\r\n        <button className=\"button\" onClick={() => setEditTrackModal(true)}>\r\n          Update\r\n        </button>\r\n        <button className=\"button\" onClick={() => onDelete(data.id)}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n      {/* <EditTrackModal isOpen={showEditTrackModal} trackData={data} onEdit={onUpdate} onClose={CloseEditTrackModal}/> */}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Track;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASrC,MAAMC,YAAY,GAAG;EACjBC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,QAAQ;EACfC,GAAG,EAAE;AACT,CAAC;AAED,MAAMC,KAAsB,GAAGC,IAAA,IAAkC;EAAAC,EAAA;EAAA,IAAjC;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAAJ,IAAA;EAE1D,MAAM,CAACK,kBAAkB,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE/D,SAASiB,mBAAmBA,CAAA,EAAG;IAC7BD,iBAAiB,CAAC,KAAK,CAAC;EAC1B;EAEA,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAKN,IAAI,CAACP;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACrBpB,OAAA;MAAAgB,QAAA,EAAKN,IAAI,CAACN;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACtBpB,OAAA;MAAAgB,QAAA,EAAKN,IAAI,CAACL;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACrBpB,OAAA;MAAAgB,QAAA,EAAKN,IAAI,CAACJ;IAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACnBpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAQqB,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMR,iBAAiB,CAAC,IAAI,CAAE;QAAAE,QAAA,EAAC;MAEnE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTpB,OAAA;QAAQqB,SAAS,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACF,IAAI,CAACR,EAAE,CAAE;QAAAc,QAAA,EAAC;MAE7D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN;EAAA,GAZEV,IAAI,CAACR,EAAE;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAcX;AAET,CAAC;AAACX,EAAA,CAzBIF,KAAsB;AAAAgB,EAAA,GAAtBhB,KAAsB;AA2B5B,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}