{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\musiclibrary\\\\src\\\\components\\\\AddTrackModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactModal from \"react-modal\";\nimport \"../components/Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTrackModal = _ref => {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onAdd\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [bpm, setBPM] = useState(0);\n  function handleSubmit(event) {\n    event.preventDefault();\n    const newTrack = {\n      id: 4,\n      title: title,\n      artist: artist,\n      genre: genre,\n      bpm: bpm\n    };\n    onAdd(newTrack);\n    onClose();\n  }\n  return /*#__PURE__*/_jsxDEV(ReactModal, {\n    className: \"ReactModal_Overlay\",\n    isOpen: isOpen,\n    onRequestClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Track hinzuf\\xFCgen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ReactModal_Content\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: event => setTitle(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Artist:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: artist,\n          onChange: event => setArtist(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Genre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: genre,\n          onChange: event => setGenre(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"BPM:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: bpm,\n          onChange: event => setBPM(parseInt(event.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Hinzuf\\xFCgen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ReactModal_CloseBtn\",\n        type: \"button\",\n        onClick: onClose,\n        children: \"Abbrechen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTrackModal, \"Ev0MTJDoqejHty5Wl58iiWIY7NM=\");\n_c = AddTrackModal;\nexport default AddTrackModal;\nvar _c;\n$RefreshReg$(_c, \"AddTrackModal\");","map":{"version":3,"names":["React","useState","ReactModal","jsxDEV","_jsxDEV","AddTrackModal","_ref","_s","isOpen","onClose","onAdd","title","setTitle","artist","setArtist","genre","setGenre","bpm","setBPM","handleSubmit","event","preventDefault","newTrack","id","className","onRequestClose","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","parseInt","onClick","_c","$RefreshReg$"],"sources":["E:/Projects/musiclibrary/src/components/AddTrackModal.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { TrackType } from \"../types/Types\";\r\nimport ReactModal from \"react-modal\";\r\nimport \"../components/Modal.css\";\r\n\r\ntype AddTrackModalProps = {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onAdd: (track: TrackType) => void;\r\n};\r\n\r\nconst AddTrackModal: React.FC<AddTrackModalProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onAdd,\r\n}) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [artist, setArtist] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n  const [bpm, setBPM] = useState(0);\r\n\r\n  function handleSubmit(event: React.FormEvent) {\r\n    event.preventDefault();\r\n    const newTrack = {\r\n      id: 4,\r\n      title: title,\r\n      artist: artist,\r\n      genre: genre,\r\n      bpm: bpm,\r\n    };\r\n    onAdd(newTrack);\r\n    onClose();\r\n  }\r\n  return (\r\n    <ReactModal className={\"ReactModal_Overlay\"} isOpen={isOpen} onRequestClose={onClose}>\r\n      <h2>Track hinzufügen</h2>\r\n      <form className=\"ReactModal_Content\" onSubmit={handleSubmit}>\r\n        <label>\r\n          Title:\r\n          <input type=\"text\" value={title} onChange={(event) => setTitle(event.target.value)} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Artist:\r\n          <input type=\"text\" value={artist} onChange={(event) => setArtist(event.target.value)} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Genre:\r\n          <input type=\"text\" value={genre} onChange={(event) => setGenre(event.target.value)} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          BPM:\r\n          <input type=\"number\" value={bpm} onChange={(event) => setBPM(parseInt(event.target.value))} />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Hinzufügen</button>\r\n        <button className=\"ReactModal_CloseBtn\" type=\"button\" onClick={onClose}>Abbrechen</button>\r\n      </form>\r\n    </ReactModal>\r\n  );\r\n};\r\n\r\nexport default AddTrackModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}